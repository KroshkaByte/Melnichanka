# Generated by Django 4.2 on 2024-02-10 19:36

import django.contrib.auth.models
import django.utils.timezone
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company_name", models.CharField(max_length=100)),
                ("contract_number", models.CharField(max_length=50, unique=True)),
                ("contract_date", models.DateField()),
                ("director_position", models.CharField(max_length=100)),
                ("director_name", models.CharField(max_length=100)),
                ("destination_station_name", models.CharField(max_length=100)),
                ("destination_station_id", models.PositiveIntegerField()),
                ("receiver_name", models.CharField(max_length=100)),
                ("receiver_id", models.PositiveIntegerField()),
                ("receiver_okpo", models.PositiveIntegerField()),
                ("receiver_adress", models.CharField(max_length=200)),
                ("special_marks", models.CharField(max_length=200)),
                ("last_application_number", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Factory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "factory_name",
                    models.CharField(
                        choices=[
                            ("ККХП", 'АО "Курский Комбинат Хлебопродуктов'),
                            ("КХПС", 'АО "Комбинат Хлебопродуктов Старооскольский'),
                            ("ГКХП", 'АО "Городищенский Комбинат Хлебопродуктов'),
                        ],
                        default="ККХП",
                        max_length=4,
                    ),
                ),
                ("factory_city", models.CharField(max_length=50)),
                ("factory_adress", models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Имя пользователя"
                    ),
                ),
                ("first_name", models.CharField(max_length=50, verbose_name="Имя")),
                ("last_name", models.CharField(max_length=50, verbose_name="Фамилия")),
                (
                    "patronymic",
                    models.CharField(max_length=50, verbose_name="Отчество"),
                ),
                ("position", models.CharField(max_length=50, verbose_name="Должность")),
                ("department", models.CharField(max_length=50, verbose_name="Отдел")),
                ("email", models.EmailField(max_length=50, unique=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("password", models.CharField(max_length=150)),
                (
                    "phone_number_work",
                    phonenumber_field.modelfields.PhoneNumberField(
                        max_length=128, region=None, verbose_name="Личный телефон"
                    ),
                ),
                (
                    "phone_number_personal",
                    phonenumber_field.modelfields.PhoneNumberField(
                        max_length=128, region=None, verbose_name="Рабочий телефон"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователи",
                "verbose_name_plural": "Пользователи",
                "ordering": ["username"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
